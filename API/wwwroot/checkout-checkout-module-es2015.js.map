{"version":3,"sources":["./node_modules/@stripe/stripe-js/dist/stripe.esm.js","./src/app/checkout/checkout-address/checkout-address.component.ts","./src/app/checkout/checkout-address/checkout-address.component.html","./src/app/checkout/checkout-delivery/checkout-delivery.component.ts","./src/app/checkout/checkout-delivery/checkout-delivery.component.html","./src/app/checkout/checkout-payment/checkout-payment.component.ts","./src/app/checkout/checkout-payment/checkout-payment.component.html","./src/app/checkout/checkout-review/checkout-review.component.ts","./src/app/checkout/checkout-review/checkout-review.component.html","./src/app/checkout/checkout-routing.module.ts","./src/app/checkout/checkout-success/checkout-success.component.ts","./src/app/checkout/checkout-success/checkout-success.component.html","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout.component.html","./src/app/checkout/checkout.module.ts","./src/app/checkout/checkout.service.ts"],"names":[],"mappings":"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","file":"checkout-checkout-module-es2015.js","sourcesContent":["var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.54.1\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n// own script injection.\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now();\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from 'src/app/account/account.service';\n\n@Component({\n  selector: 'app-checkout-address',\n  templateUrl: './checkout-address.component.html',\n  styleUrls: ['./checkout-address.component.scss']\n})\nexport class CheckoutAddressComponent implements OnInit {\n  @Input() checkoutForm: FormGroup;\n  constructor(private accountService: AccountService, private toastrService: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  saveUserAddress() {\n    this.accountService.updateUserAddress(this.checkoutForm.get('addressForm')?.value).subscribe(() => {\n      this.toastrService.success('Address successfully updated.');\n      this.checkoutForm.get('addressForm')?.reset(this.checkoutForm.get('addressForm')?.value);\n    })\n  }\n\n}\n","<div class=\"mt-4\" *ngIf=\"checkoutForm\" [formGroup]=\"checkoutForm\" style=\"min-height: 350px\">\n    <div class=\"d-flex jusitify-content-between align-items-center\">\n        <button [disabled]=\"!checkoutForm.get('addressForm')?.valid || !checkoutForm.get('addressForm')?.dirty\" \n        (click)=\"saveUserAddress()\" class=\"btn btn-outline-success mb-3\">\n            Save as default address\n        </button>\n    </div>\n    <div class=\"row\" formGroupName=\"addressForm\">\n        <div class=\"form-group col-6\">\n            <div class=\"form-floating mb-3\">\n                <input formControlName=\"firstName\" type=\"text\" class=\"form-control\" id=\"firstName\"\n                    [class.is-invalid]=\"checkoutForm.get('addressForm.firstName')?.touched && checkoutForm.get('addressForm.firstName')?.invalid\"\n                    placeholder=\"First name\">\n                <label for=\"floatingInput\">First name</label>\n                <div class=\"invalid-feedback\"\n                    *ngIf=\"checkoutForm.get('addressForm.firstName')?.errors && checkoutForm.get('addressForm.firstName')?.errors['required'] === true\">\n                    First Name is required\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group col-6\">\n            <div class=\"form-floating mb-3\">\n                <input formControlName=\"lastName\" type=\"text\" class=\"form-control\" id=\"lastName\"\n                    [class.is-invalid]=\"checkoutForm.get('addressForm.lastName')?.touched && checkoutForm.get('addressForm.lastName')?.invalid\"\n                    placeholder=\"Last name\">\n                <label for=\"floatingInput\">Last name</label>\n                <div class=\"invalid-feedback\"\n                    *ngIf=\"checkoutForm.get('addressForm.lastName')?.errors && checkoutForm.get('addressForm.lastName')?.errors['required'] === true\">\n                    Last Name is required\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group col-6\">\n            <div class=\"form-floating mb-3\">\n                <input formControlName=\"street\" type=\"text\" class=\"form-control\" id=\"street\"\n                    [class.is-invalid]=\"checkoutForm.get('addressForm.street')?.touched && checkoutForm.get('addressForm.street')?.invalid\"\n                    placeholder=\"Street\">\n                <label for=\"floatingInput\">Street</label>\n                <div class=\"invalid-feedback\"\n                    *ngIf=\"checkoutForm.get('addressForm.street')?.errors && checkoutForm.get('addressForm.street')?.errors['required'] === true\">\n                    Street is required\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group col-6\">\n            <div class=\"form-floating mb-3\">\n                <input formControlName=\"city\" type=\"text\" class=\"form-control\" id=\"city\"\n                    [class.is-invalid]=\"checkoutForm.get('addressForm.city')?.touched && checkoutForm.get('addressForm.city')?.invalid\"\n                    placeholder=\"City\">\n                <label for=\"floatingInput\">City</label>\n                <div class=\"invalid-feedback\"\n                    *ngIf=\"checkoutForm.get('addressForm.city')?.errors && checkoutForm.get('addressForm.city')?.errors['required'] === true\">\n                    City is required\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group col-6\">\n            <div class=\"form-floating mb-3\">\n                <input formControlName=\"state\" type=\"text\" class=\"form-control\" id=\"state\"\n                    [class.is-invalid]=\"checkoutForm.get('addressForm.state')?.touched && checkoutForm.get('addressForm.state')?.invalid\"\n                    placeholder=\"State\">\n                <label for=\"floatingInput\">State</label>\n                <div class=\"invalid-feedback\"\n                    *ngIf=\"checkoutForm.get('addressForm.state')?.errors && checkoutForm.get('addressForm.state')?.errors['required'] === true\">\n                    State is required\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group col-6\">\n            <div class=\"form-floating mb-3\">\n                <input formControlName=\"zipCode\" type=\"text\" class=\"form-control\" id=\"zipCode\"\n                    [class.is-invalid]=\"checkoutForm.get('addressForm.zipCode')?.touched && checkoutForm.get('addressForm.zipCode')?.invalid\"\n                    placeholder=\"State\">\n                <label for=\"floatingInput\">Zip Code</label>\n                <div class=\"invalid-feedback\"\n                    *ngIf=\"checkoutForm.get('addressForm.zipCode')?.errors && checkoutForm.get('addressForm.zipCode')?.errors['required'] === true\">\n                    ZipCode is required\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-between flex-row mb-5\">\n    <button class=\"btn btn-outline-primary\" routerLink=\"/basket\">\n        <i class=\"fa fa-angle-left\"></i> Back to basket\n    </button>\n    <button [disabled]=\"checkoutForm.get('addressForm')?.invalid\" class=\"btn btn-primary\" cdkStepperNext>\n        Go to delivery <i class=\"fa fa-angle-right\"></i>\n    </button>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { IDeliveryMethod } from 'src/app/shared/models/deliveryMethod';\nimport { CheckoutService } from '../checkout.service';\nimport { BasketService } from 'src/app/basket/basket.service';\n\n@Component({\n  selector: 'app-checkout-delivery',\n  templateUrl: './checkout-delivery.component.html',\n  styleUrls: ['./checkout-delivery.component.scss']\n})\nexport class CheckoutDeliveryComponent implements OnInit {\n  @Input() checkoutForm: FormGroup;\n  deliveryMethods: IDeliveryMethod[] = [];\n  constructor(private checkoutService: CheckoutService, private basketService: BasketService) { }\n\n  ngOnInit(): void {\n    this.getDeliveryMethods();\n  }\n\n  getDeliveryMethods() {\n    this.checkoutService.getDeliveryMethods().subscribe(dm => {\n      this.deliveryMethods = dm;\n    })\n  }\n\n  setShippingPrice(dm: IDeliveryMethod) {\n    this.basketService.setShippingPrice(dm);\n  }\n\n}\n","<div class=\"mt-4\" *ngIf=\"checkoutForm\" [formGroup]=\"checkoutForm\" style=\"min-height: 350px\">\n    <div class=\"row\" formGroupName=\"deliveryForm\">\n        <div class=\"col-6 form-group\" *ngFor=\"let method of deliveryMethods\">\n            <input (click)=\"setShippingPrice(method)\" class=\"form-check-input\" type=\"radio\" value=\"{{method.id}}\"\n                id=\"{{method.id}}\" formControlName=\"deliveryMethod\" />\n            <label for=\"{{method.id}}\" class=\"form-check-label ms-2 mb-3\"><strong>{{method.shortname}} -\n                    {{method.price | currency}}</strong><br />\n                <span class=\"label-description\">{{method.description}}</span>\n            </label>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-between flex-row mb-5\">\n    <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\n        <i class=\"fa fa-angle-left\"></i> Back to address\n    </button>\n    <button [disabled]=\"checkoutForm.get('deliveryForm')?.invalid\" class=\"btn btn-primary\" cdkStepperNext>\n        Go to review <i class=\"fa fa-angle-right\"></i>\n    </button>\n</div>","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BasketService } from 'src/app/basket/basket.service';\nimport { CheckoutService } from '../checkout.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { IBasket } from 'src/app/shared/models/basket';\nimport { IAddress } from 'src/app/shared/models/user';\nimport { IOrderToCreate } from 'src/app/shared/models/order';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Stripe, StripeCardCvcElement, StripeCardExpiryElement, StripeCardNumberElement, loadStripe } from '@stripe/stripe-js';\n\n@Component({\n  selector: 'app-checkout-payment',\n  templateUrl: './checkout-payment.component.html',\n  styleUrls: ['./checkout-payment.component.scss']\n})\nexport class CheckoutPaymentComponent implements AfterViewInit {\n  @Input() checkoutForm: FormGroup;\n  @ViewChild('cardNumber', { static: false }) cardNumberElement?: ElementRef;\n  @ViewChild('cardExpiry', { static: false }) cardExpiryElement?: ElementRef;\n  @ViewChild('cardCvc', { static: false }) cardCvcElement?: ElementRef;\n  stripe: Stripe | null = null;\n  cardNumber?: StripeCardNumberElement;\n  cardExpiry?: StripeCardExpiryElement;\n  cardCvc?: StripeCardCvcElement;\n  cardErrors: any;\n  loading = false;\n  constructor(private basketService: BasketService, private checkoutService: CheckoutService,\n    private toastrService: ToastrService, private router: Router) { }\n\n  ngAfterViewInit(): void {\n    loadStripe(\"pk_test_AbTOddWLqoAVYKJWpqlEhYBk00iQ4KJi4D\").then(stripe => {\n      this.stripe = stripe;\n      const elements = this.stripe.elements();\n      if (elements) {\n        // Create card number\n        this.cardNumber = elements.create('cardNumber');\n        this.cardNumber.mount(this.cardNumberElement?.nativeElement);\n        this.cardNumber.on('change', event => {\n          if (event.error) this.cardErrors = event.error.message;\n          else this.cardErrors = null;\n        })\n\n        // Create card expiry\n        this.cardExpiry = elements.create('cardExpiry');\n        this.cardExpiry.mount(this.cardExpiryElement?.nativeElement);\n        this.cardExpiry.on('change', event => {\n          if (event.error) this.cardErrors = event.error.message;\n          else this.cardErrors = null;\n        })\n\n        // Create card cvc\n        this.cardCvc = elements.create('cardCvc');\n        this.cardCvc.mount(this.cardCvcElement?.nativeElement);\n        this.cardCvc.on('change', event => {\n          if (event.error) this.cardErrors = event.error.message;\n          else this.cardErrors = null;\n        })\n      }\n    });\n  }\n\n  async submitOrder() {\n    this.loading = true;\n    const basket = this.basketService.getCurrentBasketValue();\n    try {\n      const createdOrder = await this.createOrder(basket);\n      const paymentResult = await this.confirmPaymentWithStripe(basket);\n      if (paymentResult.paymentIntent) {\n        this.basketService.deleteLocalBasket();\n        const navigationExtras: NavigationExtras = { state: createdOrder };\n        this.router.navigate(['checkout/success'], navigationExtras);\n      } else {\n        this.toastrService.error(paymentResult.error.message);\n      }\n    } catch (error) {\n      console.log(error);\n      this.toastrService.error(error.message);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  private async confirmPaymentWithStripe(basket: IBasket) {\n    if (!basket) throw new Error('Basket is null');\n    const result = this.stripe.confirmCardPayment(basket.clientSecret, {\n      payment_method: {\n        card: this.cardNumber,\n        billing_details: {\n          name: this.checkoutForm.get('paymentForm')?.get('nameOnCard')?.value\n        }\n      }\n    })\n    if (!result) throw new Error('Problem attempting payment with stripe');\n    return result;\n  }\n\n  private async createOrder(basket: IBasket) {\n    if (!basket) throw new Error('Basket is null');\n    const orderToCreate = this.getOrderToCreate(basket);\n    return this.checkoutService.createOrder(orderToCreate).toPromise();\n  }\n\n  private getOrderToCreate(basket: IBasket): IOrderToCreate {\n    const deliveryMethod = this.checkoutForm?.get('deliveryForm')?.get('deliveryMethod')?.value;\n    const shipToAddress = this.checkoutForm?.get('addressForm')?.value as IAddress;\n    if (!deliveryMethod || !shipToAddress) throw new Error('Problem with Basket');\n    return {\n      basketId: basket.id,\n      deliveryMethodId: deliveryMethod,\n      shipToAddress: shipToAddress\n    }\n  }\n\n}\n","<div class=\"mt-4\" *ngIf=\"checkoutForm\" [formGroup]=\"checkoutForm\" style=\"min-height: 350px\">\n    <div class=\"row\">\n        <div class=\"form-group col-12\" formGroupName=\"paymentForm\">\n            <div class=\"form-floating mb-3\">\n                <input formControlName=\"nameOnCard\" type=\"text\" class=\"form-control\" id=\"nameOnCard\"\n                    [class.is-invalid]=\"checkoutForm.get('paymentForm.nameOnCard')?.touched && checkoutForm.get('paymentForm.nameOnCard')?.invalid\"\n                    placeholder=\"Name On Card\">\n                <label for=\"floatingInput\">Name On Card</label>\n                <div class=\"invalid-feedback\"\n                    *ngIf=\"checkoutForm.get('paymentForm.nameOnCard')?.errors && checkoutForm.get('paymentForm.nameOnCard')?.errors['required'] === true\">\n                    Name On Card is required\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row mb-3\">\n        <div class=\"col-12\">\n            <span class=\"text-danger\">{{ cardErrors }}</span>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-floating\">\n                <div class=\"form-control\" #cardNumber></div>\n                <label>Card Number</label>               \n            </div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"form-floating\">\n                <div class=\"form-control\" #cardExpiry></div>\n                <label>Card Expiry</label>\n            </div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"form-floating\">\n                <div class=\"form-control\" #cardCvc></div>\n                <label>Card CVC</label>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-between flex-row mb-5\">\n    <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\n        <i class=\"fa fa-angle-left\"></i> Back to review\n    </button>\n    <button [disabled]=\"loading\" class=\"btn btn-primary\" (click)=\"submitOrder()\">\n        Submit order <i class=\"fa fa-angle-right\"></i>\n        <i class=\"fa fa-spinner fa-spin\" *ngIf=\"loading\"></i>\n    </button>\n</div>\n","import { CdkStepper } from '@angular/cdk/stepper';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { BasketService } from 'src/app/basket/basket.service';\n\n@Component({\n  selector: 'app-checkout-review',\n  templateUrl: './checkout-review.component.html',\n  styleUrls: ['./checkout-review.component.scss']\n})\nexport class CheckoutReviewComponent implements OnInit {\n  @Input() appStepper?: CdkStepper;\n  constructor(private basketService: BasketService, private toastrService: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  createPaymentIntent() {\n    this.basketService.createPaymentIntent().subscribe(() => {\n      this.appStepper?.next();\n    }, error => this.toastrService.error('Error: ' + error?.message || 'Oops something went wrong please try again.'))\n  }\n\n}\n","<div class=\"mt-4\" style=\"min-height: 350px\">\n    <app-basket-summary [isBasket]=\"false\"></app-basket-summary>\n</div>\n\n<div class=\"d-flex justify-content-between flex-row mb-5\">\n    <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\n        <i class=\"fa fa-angle-left\"></i> Back to delivery\n    </button>\n    <button (click)=\"createPaymentIntent()\" class=\"btn btn-primary\">\n        Go to payment <i class=\"fa fa-angle-right\"></i>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CheckoutComponent } from './checkout.component';\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: CheckoutComponent\n  },\n  {\n    path: 'success', component: CheckoutSuccessComponent\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class CheckoutRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IOrder } from 'src/app/shared/models/order';\n\n@Component({\n  selector: 'app-checkout-success',\n  templateUrl: './checkout-success.component.html',\n  styleUrls: ['./checkout-success.component.scss']\n})\nexport class CheckoutSuccessComponent implements OnInit {\n  order: any;\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.order = navigation?.extras?.state;\n  }\n\n  ngOnInit(): void {\n  }\n\n  viewOrder() {\n    if (this.order)\n      this.router.navigateByUrl(`orders/${this.order.id}`);\n  }\n\n}\n","<div class=\"container mt-5\" style=\"min-height: 350px\">\n    <div><i class=\"fa fa-check-circle fa-5x text-success\"></i></div>\n    <h2>Thank you your order is confirmed. <span *ngIf=\"order\">To track this order please use your order Id: {{ order.id }}</span></h2>\n    <button (click)=\"viewOrder()\" class=\"btn btn-outline-success\">View your order</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AccountService } from '../account/account.service';\nimport { IAddress } from '../shared/models/user';\nimport { BasketService } from '../basket/basket.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\n  checkoutForm: FormGroup;\n  constructor(public fb: FormBuilder, private accountService: AccountService, private basketService: BasketService) { }\n\n  ngOnInit(): void {\n    this.createCheckoutForm();\n    this.getAddressFormValues();\n    this.getDeliveryFormValue();\n  }\n\n  createCheckoutForm() {\n    // Checkout form\n    this.checkoutForm = this.fb.group({\n      // Containing needed inner forms\n      addressForm: this.fb.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        street: ['', Validators.required],\n        city: ['', Validators.required],\n        state: ['', Validators.required],\n        zipCode: ['', Validators.required],\n      }),\n      deliveryForm: this.fb.group({\n        deliveryMethod: ['', Validators.required]\n      }),\n      paymentForm: this.fb.group({\n        nameOnCard: ['', Validators.required]\n      })\n    })\n  }\n\n  getAddressFormValues() {\n    this.accountService.getUserAddress().subscribe((address: IAddress) => {\n      if (address) {\n        this.checkoutForm.get('addressForm')?.patchValue(address);\n      }\n    })\n  }\n\n  getDeliveryFormValue() {\n    const basket = this.basketService.getCurrentBasketValue();\n    if (basket && basket.deliveryMethodId) {\n      this.checkoutForm.get('deliveryForm')?.get('deliveryMethod')?.patchValue(basket.deliveryMethodId?.toString());\n    }\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col-8\">\n            <app-stepper #appStepper>\n                <cdk-step [label]=\"'Address'\" [completed]=\"checkoutForm.get('addressForm')?.valid\">\n                    <app-checkout-address [checkoutForm]=\"checkoutForm\"></app-checkout-address>\n                </cdk-step>\n                <cdk-step [label]=\"'Delivery'\" [completed]=\"checkoutForm.get('deliveryForm')?.valid\">\n                    <app-checkout-delivery [checkoutForm]=\"checkoutForm\"></app-checkout-delivery>\n                </cdk-step>\n                <cdk-step [label]=\"'Review'\">\n                    <app-checkout-review [appStepper]=\"appStepper\"></app-checkout-review>\n                </cdk-step>\n                <cdk-step [label]=\"'Payment'\" [completed]=\"checkoutForm.get('paymentForm')?.valid\">\n                    <app-checkout-payment [checkoutForm]=\"checkoutForm\"></app-checkout-payment>\n                </cdk-step>\n            </app-stepper>\n        </div>\n        <div class=\"col-4\">\n            <app-order-totals></app-order-totals>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CheckoutComponent } from './checkout.component';\nimport { CheckoutRoutingModule } from './checkout-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CheckoutAddressComponent } from './checkout-address/checkout-address.component';\nimport { CheckoutDeliveryComponent } from './checkout-delivery/checkout-delivery.component';\nimport { CheckoutPaymentComponent } from './checkout-payment/checkout-payment.component';\nimport { CheckoutReviewComponent } from './checkout-review/checkout-review.component';\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [CheckoutComponent, CheckoutAddressComponent, CheckoutDeliveryComponent, CheckoutPaymentComponent, CheckoutReviewComponent, CheckoutSuccessComponent],\n  imports: [\n    CommonModule,\n    CheckoutRoutingModule,\n    SharedModule,\n    ReactiveFormsModule\n  ]\n})\nexport class CheckoutModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IDeliveryMethod } from '../shared/models/deliveryMethod';\nimport { map } from 'rxjs/operators';\nimport { IOrderToCreate } from '../shared/models/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckoutService {\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  getDeliveryMethods() {\n    // const token = localStorage.getItem('token');\n    // let headers = new HttpHeaders();\n    // headers = headers.set('Authorization', `Bearer ${token}`);\n    return this.http.get<IDeliveryMethod[]>(this.baseUrl + 'orders/delivery-methods').pipe(\n      map(dm => {\n        return dm.sort((a, b) => b.price - a.price);\n      })\n    )\n  }\n\n  createOrder(order: IOrderToCreate) {\n    return this.http.post(this.baseUrl + 'orders', order);\n  }\n}\n"],"sourceRoot":"webpack:///"}